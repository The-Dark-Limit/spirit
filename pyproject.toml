[tool.poetry]
name = "spirit"
version = "0.1.0"
description = ""
authors = ["NickiHell <nickihell@ya.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"

torch = "^2.0.1"
transformers = "^4.26.1"
bitsandbytes = "^0.39.1"
aiogram = "^2.25.1"
loguru = "^0.7.0"
black = "^23.1.0"
ruff = "^0.0.275"

[tool.ruff]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "B", # flake-bugbear
  "Q", # flake8-quotes
  "PT", # flake8-pytest-style
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "FBT", # flake8-boolean-trap
  "C4", # flake8-comprehensions
  "PIE", # flake8-pie
  "TRY", # tryceratops
  "RUF", # ruff
  "PL", # pylint
  "DTZ", # flake8-datetimez
  "UP", # pyupgrade
  "C90", # mccabe
  "COM", # flake8-commas
  "INP", # flake8-no-pep420
  "TID", # flake8-tidy-imports
  "PTH", # flake8-use-pathlib
  "ERA", # eradicate
]

ignore = [
  "Q000",
  "E501", # Never enforce line length
  "RET504", # Unnecessary variable assignment before `return` statement
  "RUF001", # ruff unicode specific rules
  "RUF002", # ruff unicode specific rules
  "RUF003", # ruff unicode specific rules
  "TRY003", # Avoid specifying long messages outside the exception class
]

[tool.ruff.per-file-ignores]
"*/settings/*" = [
  "ERA001", # Found commented-out code
  "PLW1508", # Invalid type for environment variable default
  "FBT003", # Boolean positional value in function call
]
"tests/*" = [
  "ARG001", # Unused function argument
  "ARG002", # Unused method argument
  "ERA001", # Found commented-out code
  "PLR0913", # Too many arguments to function call
  "PLR2004", # Magic value used in comparison
  "INP001", # File is part of an implicit namespace package
]
"*/migrations/*" = [
  "INP001", # Add an `__init__.py`
  "ERA001", # Found commented-out code
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
]

unfixable = [
  "B", # Avoid trying to fix flake8-bugbear violations.
  "ERA", # Avoid deleting commented-out code
]

extend-exclude = []

line-length = 120
target-version = "py311"

[tool.ruff.mccabe]
max-complexity = 10

[tool.isort]
profile = "black"
line_length = 120
lines_after_imports = 2
ensure_newline_before_comments = true

[tool.black]
line-length = 120
target-version = ["py311"]
skip-string-normalization = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
