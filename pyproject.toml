[project]
name = "spirit"
version = "0.1.0"
description = ""
requires-python = ">=3.10"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "NickiHell", email = "nickihell@ya.ru" },
]
dependencies = [
    "torch>=2.1.1",
    "transformers>=4.35.2",
    "aiogram>=3.1.1",
    "loguru>=0.7.2",
    "dependency-injector>=4.41.0",
    "setuptools>=68.2.2",
    "msgspec>=0.18.4",
]

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.10.0",
]

[tool.ruff]
line-length = 120
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "B", # flake-bugbear
  "Q", # flake8-quotes
  "PT", # flake8-pytest-style
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "FBT", # flake8-boolean-trap
  "C4", # flake8-comprehensions
  "PIE", # flake8-pie
  "TRY", # tryceratops
  "RUF", # ruff
  "PL", # pylint
  "DTZ", # flake8-datetimez
  "UP", # pyupgrade
  "C90", # mccabe
  "COM", # flake8-commas
  "INP", # flake8-no-pep420
  "TID", # flake8-tidy-imports
  "PTH", # flake8-use-pathlib
  "ERA", # eradicate
]

ignore = [
  "Q000",
  "E501", # Never enforce line length
  "RET504", # Unnecessary variable assignment before `return` statement
  "RUF001", # ruff unicode specific rules
  "RUF002", # ruff unicode specific rules
  "RUF003", # ruff unicode specific rules
  "TRY003", # Avoid specifying long messages outside the exception class
]

[tool.ruff.per-file-ignores]
"*/settings/*" = [
  "ERA001", # Found commented-out code
  "PLW1508", # Invalid type for environment variable default
  "FBT003", # Boolean positional value in function call
]

unfixable = [
  "B", # Avoid trying to fix flake8-bugbear violations.
  "ERA", # Avoid deleting commented-out code
]

extend-exclude = []

[tool.ruff.mccabe]
max-complexity = 10

[tool.black]
line-length = 120
target-version = ["py311"]
skip-string-normalization = true

[tool.pdm.build]
includes = []

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
